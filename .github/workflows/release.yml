name: Release
on:
  push:
    tags:
      - v*.*.*

jobs:
  build:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: version
        id: version
        run: |
          tag=${GITHUB_REF/refs\/tags\//}
          version=${tag#v}
          major=${version%%.*}
          echo "tag=${tag}" >> $GITHUB_OUTPUT
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "major=${major}" >> $GITHUB_OUTPUT

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build release APK
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleRelease --stacktrace --no-daemon --build-cache

      - name: Sign release APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app_apk
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename APK
        id: rename_apk
        run: |
          file=${{ steps.sign_app_apk.outputs.signedReleaseFile }}
          dir=$(dirname "$file")
          filename=$(basename "$file")
          release_name=$(echo "$file" | sed 's/.*\/\([^-]*-[^-]*-[^-]*\).*/\1/')
          to_path="$dir/$release_name.apk"
          echo "to_path=${to_path}" >> $GITHUB_OUTPUT
          cp "$file" "$to_path"

      - name: Upload release APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: Release APK
          path: ${{ steps.rename_apk.outputs.to_path }}

      - name: Upload APK to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: gh release upload "v${{ steps.version.outputs.version }}" "${{ steps.rename_apk.outputs.to_path }}"

      - name: Build release AAB
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bundleRelease --stacktrace --no-daemon --build-cache

      - name: Sign release AAB
        uses: r0adkll/sign-android-release@v1
        id: sign_app_aab
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename AAB
        id: rename_aab
        run: |
          file=${{ steps.sign_app_aab.outputs.signedReleaseFile }}
          dir=$(dirname "$file")
          filename=$(basename "$file")
          release_name=$(echo "$file" | sed 's/.*\/\([^-]*-[^-]*-[^-]*\).*/\1/')
          to_path="$dir/$release_name.aab"
          echo "to_path=${to_path}" >> $GITHUB_OUTPUT
          cp "$file" "$to_path"

      - name: Upload release AAB artifact
        uses: actions/upload-artifact@v3
        with:
          name: Release AAB
          path: ${{ steps.rename_aab.outputs.to_path }}

      - name: Publish release
        uses: release-drafter/release-drafter@v5.23.0
        with:
          version: ${{ steps.version.outputs.version }}
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
